!function(){"use strict";var $=window.OpenSeadragon;if(!$&&!($=require("openseadragon")))throw new Error("OpenSeadragon is missing.");if(!$.version||$.version.major<2||2===$.version.major&&$.version.minor<1)throw new Error("Filtering plugin requires OpenSeadragon version >= 2.1");function a(e,h){var g=(h=h||{}).filters;e.filters=g?$.isArray(g)?g:[g]:[];for(var a=0;a<e.filters.length;a++){var d=e.filters[a];if(!d.processors)throw new Error("Filter processors must be specified.");d.processors=$.isArray(d.processors)?d.processors:[d.processors]}if(e.filterIncrement++,"sync"===h.loadMode)e.viewer.forceRedraw();else{for(var f=[],a=0;a<e.filters.length;a++){var d=e.filters[a];if(!d.items){f=c(e.viewer.world);break}if($.isArray(d.items))for(var i=0;i<d.items.length;i++)b(d.items[i],f);else b(d.items,f)}for(var a=0;a<f.length;a++)f[a].reset()}}function b(a,b){if(b.indexOf(a)>=0)throw new Error("An item can not have filters assigned multiple times.");b.push(a)}function c(b){for(var c=[],a=0;a<b.getItemCount();a++)c.push(b.getItemAt(a));return c}function d(b,d){if(0===b.filters.length)return[];for(var e=null,c=0;c<b.filters.length;c++){var a=b.filters[c];if(a.items){if(a.items===d||$.isArray(a.items)&&a.items.indexOf(d)>=0)return a.processors}else e=a.processors}return e||[]}$.Viewer.prototype.setFilterOptions=function(b){this.filterPluginInstance?a(this.filterPluginInstance,b):((b=b||{}).viewer=this,this.filterPluginInstance=new $.FilterPlugin(b))},$.FilterPlugin=function(b){if(!(b=b||{}).viewer)throw new Error("A viewer must be specified.");var c=this;function e(d,b,f){if(f){for(var g=c.filterIncrement,e=[],a=0;a<b.length-1;a++)!function(a){e[a]=function(){c.filterIncrement===g&&b[a+1](d,e[a+1])}}(a);e[b.length-1]=function(){c.filterIncrement===g&&f()},b[0](d,e[0])}else for(var a=0;a<b.length;a++)b[a](d,function(){})}this.viewer=b.viewer,this.viewer.addHandler("tile-loaded",function(a){var h=d(c,a.tiledImage);if(0!==h.length){var i=a.tile,b=a.image;if(null!=b){var f=window.document.createElement("canvas");f.width=b.width,f.height=b.height;var g=f.getContext("2d");g.drawImage(b,0,0),i._renderedContext=g,e(g,h,a.getCompletionCallback()),i._filterIncrement=c.filterIncrement}}}),this.viewer.addHandler("tile-drawing",function(f){var b=f.tile,a=f.rendered;if(a._filterIncrement!==c.filterIncrement){var g=d(c,f.tiledImage);if(0===g.length){a._originalImageData&&(a.putImageData(a._originalImageData,0,0),delete a._originalImageData),a._filterIncrement=c.filterIncrement;return}if(a._originalImageData?a.putImageData(a._originalImageData,0,0):a._originalImageData=a.getImageData(0,0,a.canvas.width,a.canvas.height),b._renderedContext){if(b._filterIncrement===c.filterIncrement){var h=b._renderedContext.getImageData(0,0,b._renderedContext.canvas.width,b._renderedContext.canvas.height);a.putImageData(h,0,0),delete b._renderedContext,delete b._filterIncrement,a._filterIncrement=c.filterIncrement;return}delete b._renderedContext,delete b._filterIncrement}e(a,g),a._filterIncrement=c.filterIncrement}}),this.filterIncrement=0,a(this,b)},$.Filters={THRESHOLDING:function(a){if(a<0||a>255)throw new Error("Threshold must be between 0 and 255.");return function(d,f){for(var e=d.getImageData(0,0,d.canvas.width,d.canvas.height),c=e.data,b=0;b<c.length;b+=4){var g=c[b],h=c[b+1],i=c[b+2],j=(g+h+i)/3;c[b]=c[b+1]=c[b+2]=j<a?0:255}d.putImageData(e,0,0),f()}},BRIGHTNESS:function(b){if(b< -255||b>255)throw new Error("Brightness adjustment must be between -255 and 255.");for(var c=[],a=0;a<256;a++)c[a]=a+b;return function(d,f){for(var e=d.getImageData(0,0,d.canvas.width,d.canvas.height),b=e.data,a=0;a<b.length;a+=4)b[a]=c[b[a]],b[a+1]=c[b[a+1]],b[a+2]=c[b[a+2]];d.putImageData(e,0,0),f()}},CONTRAST:function(b){if(b<0)throw new Error("Contrast adjustment must be positive.");for(var c=[],a=0;a<256;a++)c[a]=a*b;return function(d,f){for(var e=d.getImageData(0,0,d.canvas.width,d.canvas.height),b=e.data,a=0;a<b.length;a+=4)b[a]=c[b[a]],b[a+1]=c[b[a+1]],b[a+2]=c[b[a+2]];d.putImageData(e,0,0),f()}},GAMMA:function(b){if(b<0)throw new Error("Gamma adjustment must be positive.");for(var c=[],a=0;a<256;a++)c[a]=255*Math.pow(a/255,b);return function(d,f){for(var e=d.getImageData(0,0,d.canvas.width,d.canvas.height),b=e.data,a=0;a<b.length;a+=4)b[a]=c[b[a]],b[a+1]=c[b[a+1]],b[a+2]=c[b[a+2]];d.putImageData(e,0,0),f()}},GREYSCALE:function(){return function(c,f){for(var e=c.getImageData(0,0,c.canvas.width,c.canvas.height),b=e.data,a=0;a<b.length;a+=4){var d=(b[a]+b[a+1]+b[a+2])/3;b[a]=d,b[a+1]=d,b[a+2]=d}c.putImageData(e,0,0),f()}},INVERT:function(){for(var b=[],a=0;a<256;a++)b[a]=255-a;return function(d,f){for(var e=d.getImageData(0,0,d.canvas.width,d.canvas.height),c=e.data,a=0;a<c.length;a+=4)c[a]=b[c[a]],c[a+1]=b[c[a+1]],c[a+2]=b[c[a+2]];d.putImageData(e,0,0),f()}},MORPHOLOGICAL_OPERATION:function(a,b){if(a%2==0)throw new Error("The kernel size must be an odd number.");var c=Math.floor(a/2);if(!b)throw new Error("A comparator must be defined.");return function(g,s){for(var d,e=g.canvas.width,h=g.canvas.height,i=g.getImageData(0,0,e,h),f=g.getImageData(0,0,e,h).data,j=0;j<h;j++)for(var k=0;k<e;k++){for(var l=f[d=(j*e+k)*4],m=f[d+1],n=f[d+2],o=0;o<a;o++)for(var p=0;p<a;p++){var q=k+p-c,r=j+o-c;q>=0&&q<e&&r>=0&&r<h&&(l=b(f[d=(r*e+q)*4],l),m=b(f[d+1],m),n=b(f[d+2],n))}i.data[d]=l,i.data[d+1]=m,i.data[d+2]=n}g.putImageData(i,0,0),s()}},CONVOLUTION:function(a){if(!$.isArray(a))throw new Error("The kernel must be an array.");var b=Math.sqrt(a.length);if((b+1)%2!=0)throw new Error("The kernel must be a square matrix with oddwidth and height.");var c=(b-1)/2;return function(f,t){for(var d,e=f.canvas.width,g=f.canvas.height,h=f.getImageData(0,0,e,g),m=f.getImageData(0,0,e,g).data,i=0;i<g;i++)for(var j=0;j<e;j++){for(var q=0,r=0,s=0,k=0;k<b;k++)for(var l=0;l<b;l++){var n=j+l-c,o=i+k-c;if(n>=0&&n<e&&o>=0&&o<g){d=(o*e+n)*4;var p=a[k*b+l];q+=m[d]*p,r+=m[d+1]*p,s+=m[d+2]*p}}d=(i*e+j)*4,h.data[d]=q,h.data[d+1]=r,h.data[d+2]=s}f.putImageData(h,0,0),t()}},COLORMAP:function(c,b){for(var e=c.slice(0),f=255-b,a=0;a<256;a++){var d=0;d=a>b?0|Math.min((a-b)/f*128+128,255):0|Math.max(0,a/(b/128)),e[a]=c[d]}return function(c,g){for(var f=c.getImageData(0,0,c.canvas.width,c.canvas.height),b=f.data,a=0;a<b.length;a+=4){var d=e[(b[a]+b[a+1]+b[a+2])/3|0];b[a]=d[0],b[a+1]=d[1],b[a+2]=d[2]}c.putImageData(f,0,0),g()}}}}()